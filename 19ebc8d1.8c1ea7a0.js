(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{64:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return l})),i.d(t,"metadata",(function(){return s})),i.d(t,"rightToc",(function(){return u})),i.d(t,"default",(function(){return c}));var a=i(3),n=i(7),r=(i(0),i(85)),l={id:"utils",title:"@idearium/utils",sidebar_label:"@idearium/utils",slug:"/utils"},s={unversionedId:"utils",id:"utils",isDocsHomePage:!1,title:"@idearium/utils",description:"Idearium utility methods.",source:"@site/docs/utils.md",slug:"/utils",permalink:"/idearium-lib/docs/utils",editUrl:"https://github.com/idearium/idearium-lib/tree/feature-monorepo/docusaurus/docs/utils.md",version:"current",sidebar_label:"@idearium/utils",sidebar:"sidebar",previous:{title:"@idearium/log",permalink:"/idearium-lib/docs/log"}},u=[{value:"Installation",id:"installation",children:[{value:"Beta installation",id:"beta-installation",children:[]}]},{value:"Usage",id:"usage",children:[{value:"safePromise",id:"safepromise",children:[]}]}],o={rightToc:u};function c(e){var t=e.components,i=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},o,i,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Idearium utility methods."),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add -E @idearium/utils\n")),Object(r.b)("h3",{id:"beta-installation"},"Beta installation"),Object(r.b)("p",null,"If you need to install a beta version, you can:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add -E @idearium/utils@beta\n")),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("h3",{id:"safepromise"},"safePromise"),Object(r.b)("p",null,"To use ",Object(r.b)("inlineCode",{parentName:"p"},"safePromise"),", require it from ",Object(r.b)("inlineCode",{parentName:"p"},"@idearium/utils"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const { safePromise } = require('@idearium/utils');\n")),Object(r.b)("p",null,"This will take a promise and always use ",Object(r.b)("inlineCode",{parentName:"p"},"resolve")," to return a result in the format ",Object(r.b)("inlineCode",{parentName:"p"},"[err, result]"),"."),Object(r.b)("p",null,"This provides the ability to use async/wait without try/catch blocks."),Object(r.b)("p",null,"Use it like so:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const [err, result] = await safePromise(someAsyncFn);\n\nif (err) {\n    return console.log(err);\n}\n\n// Do other stuff knowing an error didn't occur.\n")))}c.isMDXComponent=!0}}]);