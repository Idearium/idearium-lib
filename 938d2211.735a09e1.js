(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{74:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return l})),i.d(t,"metadata",(function(){return r})),i.d(t,"rightToc",(function(){return s})),i.d(t,"default",(function(){return c}));var n=i(3),a=i(7),o=(i(0),i(85)),l={id:"log",title:"@idearium/log"},r={unversionedId:"log",id:"log",isDocsHomePage:!1,title:"@idearium/log",description:"The Idearium logger.",source:"@site/docs/log.md",slug:"/log",permalink:"/idearium-lib/docs/log",editUrl:"https://github.com/idearium/idearium-lib/tree/feature-monorepo/docusaurus/docs/log.md",version:"current",sidebar:"sidebar",previous:{title:"@idearium/lists",permalink:"/idearium-lib/docs/lists"},next:{title:"@idearium/utils",permalink:"/idearium-lib/docs/utils"}},s=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"InsightOps",id:"insightops",children:[]},{value:"Combining Transports",id:"combining-transports",children:[]}]}],b={rightToc:s};function c(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},b,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The Idearium logger."),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ yarn add @idearium/log\n")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"The Idearium logger takes the following environment variables:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"LOG_ENABLED")," - Whether to enable the logger or not. Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"true"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"LOG_LEVEL")," - The minimum log level to log. Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"info"),". Other accepted values are ",Object(o.b)("inlineCode",{parentName:"li"},"trace | debug | info | warn | error | fatal"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"PINO_PRETTY_PRINT")," - Whether to pretty print the logs or not, useful for development. Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"true"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"PINO_REDACT_PATHS")," - Optionally provide a comma separated list of paths to redact. ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/pinojs/pino/blob/master/docs/redaction.md#path-syntax"}),"https://github.com/pinojs/pino/blob/master/docs/redaction.md#path-syntax"))),Object(o.b)("h3",{id:"insightops"},"InsightOps"),Object(o.b)("p",null,"If you wish to log to a remote server (InsightOps), you will need the following variables:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"LOG_REMOTE")," - Whether to log to a remote server or not. Setting this to ",Object(o.b)("inlineCode",{parentName:"li"},"true")," will disable pretty printing."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"INSIGHT_OPS_REGION")," - The InsightOps region (",Object(o.b)("inlineCode",{parentName:"li"},"eu"),")."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"INSIGHT_OPS_TOKEN")," - The InsightOps token.")),Object(o.b)("p",null,"Since Pino does not natively support in process transports, we expose a ",Object(o.b)("inlineCode",{parentName:"p"},"insightops")," logging script to send logs to InsightOps.\nTo use this, simply provide the necessary variables above and start the node process:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ node server.js | insightops\n")),Object(o.b)("h3",{id:"combining-transports"},"Combining Transports"),Object(o.b)("p",null,"Sometimes you will want to use multiple transports. To do this you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"tee")," command in bash:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"$ node server.js | tee insightops pino-stackdriver --project bar --credentials /credentials.json\n")))}c.isMDXComponent=!0}}]);